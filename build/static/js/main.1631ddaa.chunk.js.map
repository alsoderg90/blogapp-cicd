{"version":3,"sources":["services/blogs.js","components/Blog.js","services/login.js","components/Login.js","components/Notification.js","components/BlogForm.js","App.js","index.js"],"names":["token","getAll","axios","get","then","response","data","setToken","newToken","create","newObject","config","headers","Authorization","post","update","id","put","remove","delete","Blog","blog","setBlogs","blogs","voteBlog","newBlog","title","author","url","likes","blogService","updatedBlog","updatedBlogs","map","oldBlog","useState","allInfo","showAll","blogStyle","paddingTop","paddingLeft","border","borderWidth","marginBottom","handleShow","ListGroup","Item","className","style","Button","onClick","variant","user","name","window","confirm","filter","savedblog","login","credentials","console","log","LoginForm","setUserName","setPassword","username","password","handleLogin","Container","Form","onSubmit","Row","Col","Label","Control","type","value","onChange","width","Notification","message","messageClass","BlogForm","setBlogsVisible","addBlog","setTitle","setAuthor","setUrl","event","preventDefault","target","App","setMessage","setMessageClass","setUser","blogsVisible","useEffect","loggedUserJSON","localStorage","getItem","JSON","parse","loginService","setItem","stringify","setTimeout","blogObject","concat","Login","hideWhenVisible","display","showWhenVisible","sortedList","sort","a","b","varitant","clear","key","blogForm","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.1631ddaa.chunk.js","sourcesContent":["import axios from 'axios'\nconst baseUrl = '/api/blogs'\n\nlet token = null\n\nconst getAll = () => {\n  const request = axios.get(baseUrl)\n  return request.then(response => response.data)\n}\n\nconst setToken = newToken => {\n  token = `bearer ${newToken}`\n}\n\nconst create = async newObject => {\n  const config = { headers: { Authorization: token } }\n  const response = await axios.post(baseUrl, newObject, config)\n  return response.data\n}\n\nconst update = async (id, newObject) => {\n  const config = { headers: { Authorization: token } }\n  const response = await axios.put(`${baseUrl}/${id}`, newObject,config)\n  return response.data\n}\n\nconst remove = id => {\n  const config = { headers: { Authorization: token } }\n  const response = axios.delete(`${baseUrl}/${id}`, config)\n  return response.data\n}\n\nexport default { getAll, setToken, create, update, remove }","/* eslint-disable no-unused-vars */\nimport React, { useState } from 'react'\nimport blogService from '../services/blogs'\nimport { Button, ListGroup } from 'react-bootstrap'\n\nconst Blog = ({ blog, setBlogs,blogs }) => {\n\n  const voteBlog = async (blog) => {\n    const newBlog = {\n      title : blog.title,\n      author : blog.author,\n      url : blog.url,\n      likes : blog.likes +1,\n    }\n    const updatedBlog = await blogService.update(blog.id,newBlog)\n    const updatedBlogs = blogs.map(oldBlog => (oldBlog.id === updatedBlog.id) ? updatedBlog : oldBlog)\n    setBlogs(updatedBlogs)\n  }\n\n  const RemoveBlog = () => {\n    return (\n      <Button\n\t  variant='danger' \n\t  id='remove' \n\t  onClick={() => {\n          if (window.confirm(`Remove blog ${blog.title} by ${blog.author} ?`))\n            blogService.remove(blog.id)\n          setBlogs(blogs.filter(savedblog => savedblog.id !== blog.id))\n        }}\n\t  > Delete\n      </Button>\n    )\n  }\n\n  const [allInfo, showAll] = useState(false)\n\n  const blogStyle = {\n    paddingTop: 5,\n    paddingLeft: 2,\n    border: 'solid',\n    borderWidth: 1,\n    marginBottom: 5\n  }\n\n  const handleShow = () => {\n    showAll(!allInfo)\n  }\n\n  const handleVote = () => {\n    voteBlog(blog)\n  }\n\n  if (allInfo === false)\n    return (\n      <ListGroup>\n        <ListGroup.Item className='blog'>\n          <div style={blogStyle}><div>\n            {blog.title} by {blog.author}\n            <Button id='view' onClick={handleShow}>View</Button>\n          </div>\n          </div>\n        </ListGroup.Item>\n      </ListGroup>\n    )\n\n  else {\n    return (\n      <ListGroup>\n        <ListGroup.Item className='all'>\n          <div style={blogStyle}><div>\n            <p>{blog.title} \n              <Button onClick={handleShow}> Hide </Button>\n            </p>\n            <p> {blog.author} </p>\n            <p> Likes {blog.likes} \n              <Button \n\t\t\t    variant=\"success\" \n\t\t\t    id='like' \n\t\t\t    onClick={handleVote}>\n\t\t\t\t Vote\n              </Button> \n            </p>\n            <p> {blog.url}</p>\n            <p> {blog.user.name}</p>\n            {RemoveBlog()}\n          </div>\n          </div>\n        </ListGroup.Item>\n\t  </ListGroup>\n    )\n  }\n}\n\nexport default Blog\n","import axios from 'axios'\nconst baseUrl = '/api/login'\n\n\n\nconst login = async credentials => {\n  const response = await axios.post(baseUrl, credentials)\n  console.log(response)\n  return response.data\n\n}\n\nexport default { login }","import React from 'react'\nimport PropTypes from 'prop-types'\nimport {Button, Form, Container, Row, Col} from 'react-bootstrap'\n\nconst LoginForm = ({\n  setUserName,\n  setPassword,\n  username,\n  password,\n  handleLogin\n}) => {\n  return (\n    <Container>\n      <Form onSubmit={handleLogin}>\n        <Row>\n          <Col>\n            <h1>Welcome to my app!</h1>\n            <h2>Log in to application</h2>\n\t\t  </Col>\n        </Row>\n        <Row>\n\t\t  <Col>\n            <Form.Label> Username: </Form.Label>\n          </Col>\n          <Col>\n            <Form.Control\n              id='username'\n              type =\"username\"\n              value={username}\n              name='Username'\n              onChange = {setUserName}\n            />\n          </Col>\n        </Row>\n        <Row>\n          <Col>\n            <Form.Label> Password</Form.Label>\n          </Col>\n          <Col>\n            <Form.Control\n              id='password'\n              type = \"password\"\n              value = {password}\n              name = \"password\"\n              onChange = {setPassword}\n            />\n          </Col>\n        </Row>\n        <Row>\n          <Col>\n            <Button id='login-button' style={{width: '25%'}} type=\"submit\">Login</Button>\n\t\t  </Col>\n        </Row>\n      </Form>\n    </Container>\n  )\n}\n\nLoginForm.propTypes = {\n  handleLogin: PropTypes.func.isRequired,\n  setUsername: PropTypes.func.isRequired,\n  setPassword: PropTypes.func.isRequired,\n  username: PropTypes.string.isRequired,\n  password: PropTypes.string.isRequired\n}\n\nexport default LoginForm","import React from 'react'\n\nconst Notification = ({ message, messageClass }) => {\n  if (message !== null) {\n    if (messageClass === 'error') {\n      return (\n        <div className='error'>{message}</div>\n      )\n    }\n    else {\n      return (\n        <div className='gg'>{message}</div>\n      )\n    }\n  }\n  else return null\n}\n\nexport default Notification","import React, { useState } from 'react'\nimport Form from 'react-bootstrap/Form'\nimport { Button, Row, Col } from 'react-bootstrap'\n\n\nconst BlogForm = ({ setBlogsVisible,addBlog }) => {\n\n  const [title, setTitle] = useState('')\n  const [author, setAuthor] = useState('')\n  const [url, setUrl] = useState('')\n\n  const newBlog = (event) => {\n    event.preventDefault()\n    const newBlog = { title: title, author: author, url: url }\n    addBlog(newBlog)\n    setUrl('')\n    setTitle('')\n    setAuthor('')\n  }\n\n  return (\n    <div>\n      <h2>Create new</h2>\n      <Form className=\"mb-3\" onSubmit={newBlog}>\n        <Form.Label> Title:</Form.Label>\n        <Form.Control id='title' type=\"text\" value={title} name=\"title\" onChange={({ target }) => {setTitle(target.value)}}/>\n        <Form.Label>Author: </Form.Label> \n        <Form.Control id='author' type=\"text\" value={author} name=\"author\" onChange={({ target }) => {setAuthor(target.value)}}/>\n        <Form.Label> Url: </Form.Label>\n        <Form.Control id='url' type=\"text\" value={url} name=\"url\" onChange={({ target }) => {setUrl(target.value)}}/>\n        <Button id='create' type=\"submit\">Create</Button>\n      </Form>\n\t  <Row>\n        <Col>\n          <Button onClick={() => setBlogsVisible(false)}> Cancel </Button>\n\t  </Col>\n\t  </Row>\n    </div>\n  )\n}\n\nexport default BlogForm","import React, { useState, useEffect } from 'react'\nimport Blog from './components/Blog'\nimport blogService from './services/blogs'\nimport loginService from './services/login'\nimport LoginForm from './components/Login'\nimport Notification from './components/Notification'\nimport BlogForm from './components/BlogForm'\nimport { Button, Container, Col, Row } from 'react-bootstrap'\n\nconst App = () => {\n//const [blog, newBlog] = useState({title:'', author:'', url:''})\n  const [password, setPassword] = useState('')\n  const [username, setUserName] = useState('')\n  const [blogs, setBlogs] = useState([])\n  const [message, setMessage] = useState(null)\n  const [messageClass, setMessageClass] = useState(null)\n  const [user, setUser] = useState(null)\n  const [blogsVisible, setBlogsVisible] = useState(false)\n\n  useEffect(() => {\n    blogService.getAll().then(blogs =>\n      setBlogs(blogs)\n    )\n  },[user])\n\n  useEffect (() => {\n    const loggedUserJSON = window.localStorage.getItem('loggedUser')\n    if (loggedUserJSON) {\n      const user = JSON.parse(loggedUserJSON)\n      setUser(user)\n      blogService.setToken(user.token)\n    }\n  },[])\n\n\n  const handleLogin = async (event) => {\n    event.preventDefault()\n\n    try {\n      const user = await loginService.login({ username, password })\n\n      blogService.setToken(user.token)\n      setUser(user)\n      setUserName('')\n      setPassword('')\n      window.localStorage.setItem('loggedUser', JSON.stringify(user))\n    }\n    catch (exception) {\n\t  console.log(exception)\n      setMessage('wrong credentials')\n      setMessageClass('error')\n      setTimeout(() => {\n        setMessageClass(null)\n        setMessage(null)\n      }, 2500)\n      setUserName('')\n      setPassword('')\n    }\n  }\n\n  const addBlog= (blogObject) => {\n    blogService.create(blogObject).then(blog => {\n      setBlogs(blogs.concat(blog))\n      setBlogsVisible(false)\n      setMessage(`A new blog: ${blog.title} by ${blog.author} added`)\n      setMessageClass('gg')\n      setTimeout(() => {\n        setMessageClass(null)\n        setMessage(null)\n      }, 2500)\n    })\n  }\n\n\n  const blogForm = () => {\n    const hideWhenVisible = { display: blogsVisible ? 'none' : '' }\n    const showWhenVisible = { display: blogsVisible ? '' : 'none' }\n    const sortedList = blogs.sort((a,b) => (a.likes < b.likes) ? 1 : -1)\n\n    return (\n      <Container>\n        <Row>\n          <h2>Blogs</h2>\n        </Row>\n        <p>\n          <Row>\n            <Col>\n              {user.name} logged in \n\t\t  </Col>\n\t\t  <Col>\n\t\t  <Button varitant=\"danger\" onClick = {() => {\n                window.localStorage.clear()\n                setUser(null)}}> Log out \n              </Button>\n\t\t  </Col>\n\t\t  </Row>\n        </p>\n        {sortedList.map(blog => \n          <Blog \n\t\t  \tkey={blog.id} \n            blog={blog} \n            setBlogs={() => setBlogs} blogs={blogs}\n          />\n        )}\n        <Container style={hideWhenVisible}> \n          <Button onClick={() => setBlogsVisible(true)}> Create </Button>\n        </Container>\n        <Container style={showWhenVisible}>\n          <Row>\n            <BlogForm\n              addBlog={addBlog}\n              setBlogsVisible={setBlogsVisible}\n              user={user}\n            />\n          </Row>\n        </Container>\n      </Container>\n    )\n  }\n\n  return (\n\n    <div>\n      <Notification message={message} messageClass={messageClass} />\n      {user === null ? <LoginForm username={username}\n        password={password} setPassword={({ target }) =>\n        {setPassword(target.value)}} setUserName={({ target }) =>\n        {setUserName(target.value)}} handleLogin={(event) =>\n        {handleLogin(event)}} /> :\n        blogForm()}\n    </div>\n  )\n}\n\nexport default App","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\nimport './App.css'\nimport 'bootstrap/dist/css/bootstrap.min.css'\n\nReactDOM.render(<App />, document.getElementById('root'))"],"sourceRoot":""}